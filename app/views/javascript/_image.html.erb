<script>
$(document).ready(function() { 
    
    // *** add and delete images from time frames ***
    $(".edit_image input[type=checkbox]").click(function() {
        $(this).parent("form").submit()
    })

    // *** Nav Menu ***
    // hides checkbox
    $("#user_nav_menu").hide()
    // when btns are clicked, boolean changes
    $(".nav_btns").click(function() {
        checkbox = $(this).parent().prev("form").children("input[type=checkbox]")
        if ( checkbox.attr("checked") ) {
            checkbox.attr("checked", false)
            checkbox.parent("form").submit()
        } else {
            checkbox.attr("checked", true)
            checkbox.parent("form").submit()
        }
    })
    // tests what state boolean is for nav_menu
    if ( $(".nav_btns").parent().prev("form").children("input[type=checkbox]").attr("checked") ) {
        $(".time_navigation").show()
        $(".delete_nav_btn").show()
        $(".gray_nav_btn").hide()
        $(".nav_down").css("bottom", "87px")
    } else {
        $(".time_navigation").hide()
        $(".gray_nav_btn").show()
        $(".delete_nav_btn").hide()
        $(".nav_down").css("bottom", "0px")

    }
    // *** END Nav Menu END ***
        
    // *** lightbox ***
   // background fadeIn styling and fadeOut styling
    var background_fadeIn = $("#background").css({"opacity" : "0.7"})               
    var background_fadeOut = $("#background")

    $(".thumbnail img").dblclick(function(e){
        $('.actions').hide()
        background_fadeIn.fadeIn("slow")
        $("#large").html("<img src='"+$(this).attr("data-src")+"' alt='"+$(this).attr("alt")+"' /><br/>"+$(this).attr("data-content")+"")
                   .center()
                   .fadeIn("slow");
        return false;
    }); 

    $('.actions').hide()
    
    $("#background").dblclick(function(){
        background_fadeOut.fadeOut("slow")
        $("#large").fadeOut("slow");
        $("#photo_form").fadeOut("slow")
        $("#edit_container").fadeOut("slow")
    });

    $("#large").dblclick(function(){
        background_fadeOut.fadeOut("slow")
        $("#large").fadeOut("slow");
    });
     // *** END lightbox END *** 


    // *** Timeline add image to scrap page ***
    $(".thumb_drag").draggable({
        containment: ".master_container",
        revert: "valid"
    })

    $(".photos_container").droppable({
        accept: ".thumb_drag",
        drop: function(event, ui) {
            get_vars()
            // new vars 
            img_id = ui.draggable.attr("data-id")
            image = ui.draggable.attr("data-image")
            root = ui.draggable.attr("data-root")
            range = ui.draggable.attr("data-range")
            beg_range = ui.draggable.attr("data-beg")
            end_range = ui.draggable.attr("data-end")
            coordinates = [50, 400]
            data = {}
            URL = root+"users/"+user_id+"/images/"+img_id+"/update"
            data[range] = true;
            data[range+'_p'] = coordinates.join(",")
            DATA = { image: data };
            // action
            $.ajax({
                url: URL,
                type: "put",
                data: DATA,
                success: function() {
                    var refresh = range+"?beg_range="+beg_range+"&end_range="+end_range
                    window.location.href = refresh
                }
            })
        }
    })

    // *** END Timeline add image to scrap page END ***

    // *** New Entries ***
    // add photo
    $(".photo_btn").toggle(function() {
        $(this).get_vars()
        // new vars 
        date = $(this).attr("data-date")
        URL = "/users/"+user_id+"/images/new"
        // set environment
        background_fadeIn.fadeIn("slow")
        // action
        $.ajax({
            url: URL,
            type: 'get',
            data: { image: {date_taken: date}}
        });
        return false;
    }, function() {
        $(this).prev("#photo_form").hide()
        background_fadeOut.fadeOut("slow")
    })

    // add journal
    $(".journal_btn").toggle(function() {
        $(this).get_vars()
        // new vars 
        date = $(this).attr("data-date")
        data = {}
        data['entry_date'] = date
        data[page] = true
        URL = root+"users/"+user_id+"/journals/new"
        // action
        $.ajax({
            url: URL,
            type: 'get',
            data: {journal: data}
        });
        return false;
    }, function() {
        $(this).prev("#journal_form").hide()
    })
    // *** END New Entries END ***

    // *** Control Panel *** 
    // control_panel: edit
    $(".edit_msg").click(function(){
        $(this).get_vars()
        // new vars
        bread_crumb = $(this).attr("data-crumb")
        URL = root+"users/"+user_id+"/images/"+img_id+"/edit"
        // action
        $.ajax({
            url: URL,
            type: 'get'
        })
    })

    // common vars for control_panel actions
    jQuery.fn.get_vars = function() {
        this_obj = $(this)
        user_id = <%= current_user.id %>
        img_id = $(this).attr("data-id")
        page = $(this).attr("data-range")
        root = $(this).attr("data-root")
    }

    // Drag
    $(".image_container").draggable({
        disabled: false,
        containment: $(".photos_container"),
        stop: function() {
            $(this).get_vars()
            // new vars
            var URL = root+"users/"+user_id+"/images/"+img_id+"/drag"
            // action 
            $.ajax({
                url: URL,
                type: 'put',
                data: this_obj.get_position(),
                success: function() {

                    $(".cp").show()
                    this_obj.css("opacity", "1")
                    this_obj.children(".control_panel").css("background", "#9E9E9E")
                    this_obj.children(".control_panel").children(".message").html("New position saved").fadeOut(5000)
                }
            })
        } // end stop function
    }) // end draggable
    

    // control_panel: RESIZE 
    $(".resize_msg").toggle(function() {
        $(this).get_vars() // common vars
        // new vars
        this_image = $(this).parent().next(".resizable");
        image_width = this_image.innerWidth();  
        image_height = this_image.innerHeight();
        ratio = image_height/image_width;  //Define image ratio
        // set the environment
        $(".cp").hide()
        this_obj.parent().parent(".image_container").draggable("option", "disabled", true ).css("opacity", "1");
        this_obj.show()
        this_obj.parent().children(".message").html("Image is now resizable").show()

        // action: allows user to resize while keeping original aspectRatio
        this_image.resizable({
            aspectRatio: 1/ratio,
            ghost: true,
            stop: function(event, ui) { 
              var URL = root+"users/"+user_id+"/images/"+img_id+"/resize"
              $.ajax({
                   url: URL,
                   type: 'put',
                   data: this_image.get_new_dimensions(),
                   success: function() {
                        $(".cp").show()
                        this_obj.parent().parent().css("opacity", "1")
                        this_obj.parent().css("background", "#9E9E9E")
                        this_obj.parent().children(".message").html("new dimensions saved").fadeOut(2000)
                        this_image.resizable("destroy")  
                        this_obj.parent().parent(".image_container").draggable("option", "disabled", false );   
                   }
              })
           }
        })
    }, function() {
        $(".cp").show()
        $(this).parent().css("background", "#9E9E9E")
        $(this).parent().children(".message").html("").hide()        
        
    });

    // grab the new image coordinates after drag and update db
    jQuery.fn.get_position = function() {
        var new_position = $(this).position()
        var new_left = new_position.left
        var new_top = new_position.top
        var coordinates = [new_left, new_top]
        var data = {};
        data[page+'_p'] = coordinates.join(",")
        DATA = {image: data }
        return DATA
    }

    // grab the new image dimensions after resize and update db
     jQuery.fn.get_new_dimensions = function() {
        var endW = $(event.target).innerWidth();
        var endH = $(event.target).innerHeight();
        var WH = [endW, endH];
        var data = {};
        
        data[page+'_dim'] = WH.join(",");
        DATA = { image: data };
        return DATA;
    }

    // control_panel on hover
    $(".image_container").hover(function() {
        $(this).children(":first").show()
    }, function(){
        $(this).children(":first").hide()
    })

    // control_panel: crop
    $(".crop_msg").click(function() {
        $(this).get_vars()
        // new vars
        bread_crumb = this_obj.attr("data-crumb")
        parameters = "?bread_crumb="+bread_crumb+"&range="+page
        URL = root+"users/"+user_id+"/images/"+img_id+"/edit"+parameters
        // action
        window.location.href = URL
    })
    // *** END Control Panel END *** 

     
});
</script>